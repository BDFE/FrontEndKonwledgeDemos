(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Template = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var testData,Template=module.exports={},subclasses={od:require("./middleware/echarts/EchartsLayer"),heatmap:require("./middleware/echarts/EchartsLayer"),scatter:require("./middleware/echarts/EchartsLayer"),grid:require("./middleware/minemap/fill")};Template.create=function(e){return new(subclasses[e.type]||Template)(e)},Template.registerMinemap=function(e){e.Template=Template},Template.util=require("./util/index"),window.minemap&&(minemap.Template=Template);
},{"./middleware/echarts/EchartsLayer":2,"./middleware/minemap/fill":7,"./util/index":8}],2:[function(require,module,exports){
function EchartsLayer(t){this.option=Object.assign({},t,{map:null});var e=t.map,a=e.getCanvasContainer();this._container=document.createElement("div"),this._container.style.width=e.getCanvas().style.width,this._container.style.height=e.getCanvas().style.height,this.chartId="echarts"+Math.random(),this._container.setAttribute("id",this.chartId),this._container.setAttribute("class","echartMap"),this._map=e,a.appendChild(this._container),this.chart=echarts.init(this._container),echarts.glMap=e,this.resize()}require("./GLMap.js"),EchartsLayer.prototype.remove=function(){this._container.parentNode.removeChild(this._container),this._map=void 0},EchartsLayer.prototype.resize=function(){var t=this;window.onresize=function(){t._container.style.width=t._map.getCanvas().style.width,t._container.style.height=t._map.getCanvas().style.height,t.chart.resize()}},EchartsLayer.prototype.getChartId=function(){return this.chartId},EchartsLayer.prototype.dispose=function(){this.chart.dispose()},EchartsLayer.name="EchartsLayer",module.exports=EchartsLayer;
},{"./GLMap.js":3}],3:[function(require,module,exports){
window.echarts&&(echarts.registerCoordinateSystem("GLMap",require("./GLMapCoordSys")),require("./GLMapModel"),require("./GLMapView"),echarts.registerAction({type:"GLMapRoam",event:"GLMapRoam",update:"updateLayout"},function(e,r){})),module.exports={version:"1.0.0"};
},{"./GLMapCoordSys":4,"./GLMapModel":5,"./GLMapView":6}],4:[function(require,module,exports){
function GLMapCoordSys(t,o){this._GLMap=t,this.dimensions=["lng","lat"],this._mapOffset=[0,0],this._api=o}GLMapCoordSys.prototype.dimensions=["lng","lat"],GLMapCoordSys.prototype.setMapOffset=function(t){this._mapOffset=t},GLMapCoordSys.prototype.getBMap=function(){return this._GLMap},GLMapCoordSys.prototype.dataToPoint=function(t){var o=this._GLMap.project(t),e=this._mapOffset;return[o.x-e[0],o.y-e[1]]},GLMapCoordSys.prototype.pointToData=function(t){var o=this._mapOffset,t=this._bmap.project([t[0]+o[0],t[1]+o[1]]);return[t.lng,t.lat]},GLMapCoordSys.prototype.getViewRect=function(){var t=this._api;return new echarts.graphic.BoundingRect(0,0,t.getWidth(),t.getHeight())},GLMapCoordSys.prototype.getRoamTransform=function(){return echarts.matrix.create()},GLMapCoordSys.dimensions=GLMapCoordSys.prototype.dimensions,GLMapCoordSys.create=function(t,o){var e;t.eachComponent("GLMap",function(t){var a=(o.getZr().painter.getViewportRoot(),echarts.glMap);e=new GLMapCoordSys(a,o),e.setMapOffset(t.__mapOffset||[0,0]),t.coordinateSystem=e}),t.eachSeries(function(t){"GLMap"===t.get("coordinateSystem")&&(t.coordinateSystem=e)})},module.exports=GLMapCoordSys;
},{}],5:[function(require,module,exports){
module.exports=echarts.extendComponentModel({type:"GLMap",getBMap:function(){return this.__GLMap},defaultOption:{roam:!1}});
},{}],6:[function(require,module,exports){
module.exports=echarts.extendComponentView({type:"GLMap",render:function(e,t,o){function n(){a||o.dispatchAction({type:"GLMapRoam"})}var a=!0,p=echarts.glMap,d=o.getZr().painter.getViewportRoot(),r=e.coordinateSystem,s=function(t,n){if(!a){var p=d.parentNode.parentNode.parentNode,s=[-parseInt(p.style.left,10)||0,-parseInt(p.style.top,10)||0];d.style.left=s[0]+"px",d.style.top=s[1]+"px",r.setMapOffset(s),e.__mapOffset=s,o.dispatchAction({type:"GLMapRoam"})}};p.off("move",this._oldMoveHandler),p.off("zoomend",this._oldZoomEndHandler),p.on("move",s),p.on("zoomend",n),this._oldMoveHandler=s,this._oldZoomEndHandler=n;e.get("roam");a=!1}});
},{}],7:[function(require,module,exports){
var Fill=function(){};module.exports=Fill;
},{}],8:[function(require,module,exports){
function lngLat2Mercator(t){var r=[],e=20037508.34*t[0]/180,a=Math.log(Math.tan((90+t[1])*Math.PI/360))/(Math.PI/180);return a=20037508.34*a/180,r.push(e),r.push(a),r}function mercator2LngLat(t){var r=[],e=t[0]/20037508.34*180,a=t[1]/20037508.34*180;return a=180/Math.PI*(2*Math.atan(Math.exp(a*Math.PI/180))-Math.PI/2),r.push(e),r.push(a),r}function calcDistance(t){for(var r=[],e=0;e<t.length-1;e++){var a=lngLat2Mercator(t[e]),o=lngLat2Mercator(t[e+1]),n=Math.sqrt(Math.pow(a[0]-o[0],2)+Math.pow(a[1]-o[1],2));r.push(n)}return r}function spliteLineAndGenGeo(t,r,e,a,o,n){for(var i=e[0]-r[0],s=e[1]-r[1],p=parseInt(Math.random()*n),u=parseInt(Math.random()*n/4),c=Math.round(100*Math.random()),h=Math.random()*o/2+1500,g=0;g<p;g++){var l=-4*h/Math.pow(e[0]-r[0],2),L=-l*(e[0]+r[0]),f=l*e[0]*r[0],M={type:"Feature",geometry:{type:"LineString",coordinates:[[r[0]+g*i/p,r[1]+g*s/p],[r[0]+(g+1)*i/p,r[1]+(g+1)*s/p]]},properties:{start_height:l*Math.pow(r[0]+g*i/p,2)+L*(r[0]+g*i/p)+f,end_height:l*Math.pow(r[0]+(g+1)*i/p,2)+L*(r[0]+(g+1)*i/p)+f,link_seq:g+u,count:c,total:p,code:a}};t.features.push(M)}}exports.pointArrayToGridGeoJson=function(t,r,e){void 0===e&&(e=!1);for(var a={type:"FeatureCollection",features:[]},o=0;o<t.length;o++){var n=e?[t[o][1],t[o][0]]:t[o],i=lngLat2Mercator(n),s={type:"Feature",geometry:{type:"Polygon",coordinates:[[mercator2LngLat([i[0]-r/2,i[1]+r/2]),mercator2LngLat([i[0]+r/2,i[1]+r/2]),mercator2LngLat([i[0]+r/2,i[1]-r/2]),mercator2LngLat([i[0]-r/2,i[1]-r/2]),mercator2LngLat([i[0]-r/2,i[1]+r/2])]]},properties:{count:t[o][2],name:100*Math.random()+""}};a.features.push(s)}return a},exports.pointArrayToPointsGeoJson=function(t,r){for(var e=0;e<t.length;e++);},exports.lngLat2Mercator=lngLat2Mercator,exports.mercator2LngLat=mercator2LngLat,exports.pointArrayToSpriteGeoJson=function(t,r,e){void 0===r&&(r=10),void 0===e&&(e=1);for(var a={type:"FeatureCollection",features:[]},o=calcDistance(t),n=[],i=0;i<t.length-1;i++)for(var s=Math.round(o[i]/r),p=t[i+1][0]-t[i][0],u=t[i+1][1]-t[i][1],c=0;c<=s;c++)n.push([t[i][0]+p/s*c,t[i][1]+u/s*c]);for(var i=0;i<n.length-4;i++){var h={type:"Feature",geometry:{type:"LineString",coordinates:[n[i],n[i+1],n[i+2],n[i+3]]},properties:{link_seq:i,status:e}};a.features.push(h)}return a},exports.pointArrayToSymtrackingGeoJson=function(t){for(var r={type:"FeatureCollection",features:[]},e=0;e<t.length-1;e++)for(var a=t[e],o=t[e+1],n=o[0]-a[0],i=o[1]-a[1],s=0;s<60;s++){var p={type:"Feature",geometry:{type:"LineString",coordinates:[[a[0]+s*n/60,a[1]+s*i/60],[a[0]+(s+1)*n/60,a[1]+(s+1)*i/60]]},properties:{link_seq:60*e+s}};r.features.push(p)}return r},exports.startAndEndPointArrayToAirlineGeoJson=function(t,r,e,a){void 0===e&&(e=2e3),void 0===a&&(a=100);for(var o={type:"FeatureCollection",features:[]},n=0;n<t.length;n++)for(var i=t[n],s=0;s<r.length;s++){var p=r[s];spliteLineAndGenGeo(o,i.lngLat,p.lngLat,i.code,e,a)}return o},exports.dataArrayToTrackingGeoJson=function(t,r,e){void 0===e&&(e=!1);for(var a={type:"FeatureCollection",features:[]},o=0;o<t.length;o++){var n=e?[t[o][1],t[o][0]]:t[o],i=lngLat2Mercator(n),s={type:"Feature",geometry:{type:"Polygon",coordinates:[[mercator2LngLat([i[0]-r/2,i[1]+r/2]),mercator2LngLat([i[0]+r/2,i[1]+r/2]),mercator2LngLat([i[0]+r/2,i[1]-r/2]),mercator2LngLat([i[0]-r/2,i[1]-r/2]),mercator2LngLat([i[0]-r/2,i[1]+r/2])]]},properties:{count:t[o][2],name:100*Math.random()+""}};a.features.push(s)}return a};
},{}]},{},[1])(1)
});


//# sourceMappingURL=template.js.map